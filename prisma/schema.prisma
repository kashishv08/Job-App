// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  email        String        @unique
  name         String?
  username     String        @unique
  password     String
  role         String
  company      Company?
  review       Review[]
  applications Application[]
}

model Job {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  employment_type String @default("fulltime")
  job_type        String @default("remote")
  location        String
  desc            String
  salary          Int
  posted          String
  apply_link      String
}

model Company {
  id      String     @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  desc    String
  ownerId String     @unique @db.ObjectId
  owner   User       @relation(fields: [ownerId], references: [id])
  jobs    Openings[]
  logo    String?
}

model Openings {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  employment_type String        @default("fulltime")
  job_type        String        @default("remote")
  location        String
  desc            String
  salary          Int
  posted          String
  apply_link      String
  companyId       String        @db.ObjectId
  company         Company       @relation(fields: [companyId], references: [id])
  applications    Application[]
}

model Review {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  userId    String @db.ObjectId
  user      User   @relation(fields: [userId], references: [id])
  companyId String
}

model Application {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  userId String   @db.ObjectId
  user   User     @relation(fields: [userId], references: [id])
  jobId  String   @db.ObjectId
  jobs   Openings @relation(fields: [jobId], references: [id])
}
